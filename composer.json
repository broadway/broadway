{
    "name": "broadway/broadway",
    "description": "Infrastructure and testing helpers for creating CQRS and event sourced applications.",
    "keywords": ["cqrs", "event sourcing", "domain-driven design", "ddd"],
    "license": "MIT",
    "require": {
        "beberlei/assert": "^3.0",
        "broadway/uuid-generator": "^1.0",
        "php": ">=7.2"
    },
    "authors": [
      {
        "name": "Alexander",
        "email": "iam.asm89@gmail.com"
      },
      {
        "name": "Emil",
        "email": "emil@broekmeulen.com"
      },
      {
        "name": "Fritsjan",
        "email": "fritsjan@qandidate.com"
      },
      {
        "name": "othillo",
        "email": "othillo@othillo.nl"
      },
      {
        "name": "Willem-Jan",
        "email": "wjzijderveld@gmail.com"
      },
      {
        "name": "Qandidate.com",
        "homepage": "http://labs.qandidate.com/"
      }
    ],
    "require-dev": {
        "monolog/monolog": "~2.0",
        "phpunit/phpunit": "^9.5",
        "ramsey/uuid": "^4.0",
        "broadway/coding-standard": "^1.2",
        "phpstan/phpstan": "@stable"
    },
    "suggest": {
        "psr/log-implementation": "Implementation for PSR3, LoggerInterface",
        "broadway/event-store-dbal": "Event store implementation using doctrine/dbal",
        "broadway/read-model-elasticsearch": "Elasticsearch read model implementation",
        "broadway/broadway-saga": "Saga component for Broadway",
        "broadway/broadway-bundle": "Symfony bundle for broadway/broadway"
    },
    "autoload": {
        "psr-4": {
            "Broadway\\": "src/Broadway/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Broadway\\": "test/Broadway/"
        }
    },
    "extra": {
        "branch-alias": {
            "dev-master": "3.0.x-dev"
        }
    }
}
